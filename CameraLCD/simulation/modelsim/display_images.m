%%
subplot(1, 3, 1);
image_data = dlmread('shark_color.txt');
image = reshape(image_data, 800, 480, 3);
image = [image(3:end, :, :) ; image(1:3,:,:)];
imshow(uint8(image));
title('Color image');

subplot(1, 3, 2);
image_data = dlmread('shark_grayed.txt');
image = reshape(image_data, 800, 480, 3);
image = [image(3:end, :, :) ; image(1:3,:,:)];

imshow(uint8(image));
title('Grayed');

subplot(1, 3, 3);
image_data = dlmread('shark_thresholded.txt');
image = reshape(image_data, 800, 480, 3);
image = [image(3:end, :, :) ; image(1:3,:,:)];
imshow(image);
title('Thresholded');

figure;
subplot(1, 2, 1);
image_data = dlmread('shark_histogrammed.txt');
image = reshape(image_data, 800, 480, 3);
image(:,:,1) = fliplr(image(:,:,1));
image(:,:,2) = fliplr(image(:,:,2));
image(:,:,3) = fliplr(image(:,:,3));
image = [image(3:end, :, :) ; image(1:3,:,:)];
imshow(image);
title('Histogrammed');

subplot(1, 2, 2);
image_data = dlmread('shark_cumulated.txt');
image = reshape(image_data, 800, 480, 3);
image(:,:,1) = fliplr(image(:,:,1));
image(:,:,2) = fliplr(image(:,:,2));
image(:,:,3) = fliplr(image(:,:,3));
image = [image(3:end, :, :) ; image(1:3,:,:)];
imshow(image);
title('Cumulated');

figure;
subplot(1, 2, 1);
image_data = dlmread('shark_block_threshold.txt');
image = reshape(image_data, 800, 480, 3);
image = [image(3:end, :, :) ; image(1:3,:,:)];
imshow(image);
title('Block Threshold');

subplot(1,2,2);
image_data = dlmread('shark_smooth_threshold.txt');
image = reshape(image_data, 800, 480, 3);
image = [image(3:end, :, :) ; image(1:3,:,:)];
imshow(image);
title('Interpolated Threshold');
%%
figure;
file = fopen('shark_hist_displayed.txt', 'r');
image_data = fscanf(file, '%d\n');
fclose(file);
image = fliplr(reshape(image_data, 800, 480));
imshow(image);
title('Histogram From HistogramDisplay.v');

%%
figure;
subplot(2,1,1);
data = dlmread('shark_hist.txt');
title('Histogram from Histogram.v');
bar(data)

subplot(2, 1, 2);
datam = dlmread('shark.txt');
h = histogram(datam, 256);
bar(h)
title('Histogram generated by Matlab');


%%
% RGB2GRAY test

figure;
image_data = dlmread('shark_grayed_v.txt');
image = reshape(image_data, 800, 480, 1);
imshow(uint8(image));
title('Grayed by RGB2GRAY');
figure
imagem = rgb2gray(imread('shark.jpg'));
imshow(uint8(imagem));
title('Grayed by MATLAB');
figure;
imshow(uint8(imagem) - uint8(image))
title('Difference between MATLAB and Verilog')
mean(double(image_data) - double(reshape(imagem, 800*480, 1)))

%%
figure;
subplot(2,1,1);
data = dlmread('shark_cumhist.txt');
bar(data);
title('Cumulative Histogram from CumulativeHistogram.v');

subplot(2,1,2);
ch = cumsum(dlmread('shark_hist.txt'));
bar(ch);
title('Cumulative Histogram generated by Matlab');

%%
figure;
subplot(2, 1, 1);
file = fopen('shark_total_hist.txt', 'r');
data = fscanf(file, '%d\n');
fclose(file);
bar(data);
title('Histogram from Total\_Histogram.v');

subplot(2,1,2);
file = fopen('shark_total_cumhist.txt', 'r');
data = fscanf(file, '%d\n');
fclose(file);
bar(data);
title('Cumulative Histogram from Total\_Histogram.v');


%%
figure;
image_data = dlmread('shark_block_thresh.txt');
image = reshape(image_data, 800, 480, 1);
imshow(uint8(image));
title('Block Threshold');

figure;
image_data = dlmread('shark_interp_thresh.txt');
image = reshape(image_data, 800, 480, 1);
imshow(uint8(image));
title('Interpolated Threshold');

%%
figure;
image_data = dlmread('delay_frame1.txt');
image = reshape(image_data, 800, 480, 3);
image = [image(3:end, :, :) ; image(1:3,:,:)];
imshow(uint8(image));
title('Frame 1 - Shark Gray');

figure;
image_data = dlmread('delay_frame2.txt');
image = reshape(image_data, 800, 480, 3);
image = [image(3:end, :, :) ; image(1:3,:,:)];
imshow(uint8(image));
title('Frame 2 - Lenna With Shark Threshold');

figure;
image_data = dlmread('delay_frame3.txt');
image = reshape(image_data, 800, 480, 3);
image = [image(3:end, :, :) ; image(1:3,:,:)];
imshow(uint8(image));
title('Frame 3 - Delayed Lenna with correct Lenna threshold');


%%
figure;
thresh = 131;
image_data = reshape(dlmread('shark.txt'), 800,480);
image_data(image_data > thresh) = 255;
image_data(image_data <= thresh) = 0;
imshow(image_data);

